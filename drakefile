import drake
import drake.cxx
import drake.cxx.qt

def configure(cxx_toolkit = None,
              cxx_config = drake.cxx.Config(),
              prefix = '/usr',
              qt = None,
              libraries = []):

  cxx_config = drake.cxx.Config(cxx_config)
  cxx_toolkit = cxx_toolkit or drake.cxx.Toolkit()

  if qt is None:
    qt = drake.cxx.qt.Qt(prefix = prefix, gui = True)
  libraries = list(map(lambda lib: drake.copy(lib, 'lib', strip_prefix = True), libraries))

  qt.plug(cxx_toolkit)

  # Qt use file generation tools, which create function with
  # missing declaration.
  cxx_config.warnings.missing_declarations = None

  # Add file config first.
  cxx_config += qt.config
  cxx_config += qt.config_gui

  cxx_config.lib_path_runtime('../lib')

  # Add the OS specific libraries. Windows ones has to be put
  # after Qt ones.
  if cxx_toolkit.os == drake.os.windows:
    cxx_config.lib('shlwapi')
    cxx_config.lib('ws2_32')
    cxx_config.lib('gdi32')
    cxx_config.lib('mswsock')
    cxx_config.lib('uuid')
    cxx_config.lib('ole32')
    cxx_config.lib('winmm')
    cxx_config.lib('oleaut32')
    cxx_config.lib('qtmain')
    cxx_config.lib('z')
    cxx_config.lib('comdlg32')
    cxx_config.lib('imm32')
    cxx_config.lib('winspool')

  cxx_config.add_local_include_path('src')

  sources = drake.nodes(
    "src/fist-gui-qt/AddFileWidget.cc",
    "src/fist-gui-qt/AvatarWidget.cc",
    "src/fist-gui-qt/AvatarIcon.cc",
    "src/fist-gui-qt/DebugWindow.cc",
    "src/fist-gui-qt/FileItem.cc",
    "src/fist-gui-qt/Footer.cc",
    "src/fist-gui-qt/HorizontalSeparator.cc",
    "src/fist-gui-qt/IconButton.cc",
    "src/fist-gui-qt/InfinitDock.cc",
    "src/fist-gui-qt/ListItem.cc",
    "src/fist-gui-qt/ListWidget.cc",
    "src/fist-gui-qt/LoginFooter.cc",
    "src/fist-gui-qt/LoginWindow.cc",
    "src/fist-gui-qt/Panel.cc",
    "src/fist-gui-qt/RoundButton.cc",
    "src/fist-gui-qt/RoundShadowWidget.cc",
    "src/fist-gui-qt/SearchField.cc",
    "src/fist-gui-qt/SendFooter.cc",
    "src/fist-gui-qt/SendPanel.cc",
    "src/fist-gui-qt/ShapeButton.cc",
    "src/fist-gui-qt/SmoothLayout.cc",
    "src/fist-gui-qt/SmoothScrollBar.cc",
    "src/fist-gui-qt/TransactionFooter.cc",
    "src/fist-gui-qt/TransactionModel.cc",
    "src/fist-gui-qt/TransactionPanel.cc",
    "src/fist-gui-qt/TransactionWidget.cc",
    "src/fist-gui-qt/TransactionWindow.cc",
    "src/fist-gui-qt/UserModel.cc",
    "src/fist-gui-qt/UserWidget.cc",
    "src/fist-gui-qt/main.cc",
    "src/fist-gui-qt/AddFileWidget.hh",
    "src/fist-gui-qt/AvatarWidget.hh",
    "src/fist-gui-qt/AvatarIcon.hh",
    "src/fist-gui-qt/DebugWindow.hh",
    "src/fist-gui-qt/FileItem.hh",
    "src/fist-gui-qt/Footer.hh",
    "src/fist-gui-qt/HorizontalSeparator.hh",
    "src/fist-gui-qt/IconButton.hh",
    "src/fist-gui-qt/InfinitDock.hh",
    "src/fist-gui-qt/ListItem.hh",
    "src/fist-gui-qt/ListWidget.hh",
    "src/fist-gui-qt/LoginFooter.hh",
    "src/fist-gui-qt/LoginWindow.hh",
    "src/fist-gui-qt/Panel.hh",
    "src/fist-gui-qt/RoundButton.hh",
    "src/fist-gui-qt/RoundShadowWidget.hh",
    "src/fist-gui-qt/SearchField.hh",
    "src/fist-gui-qt/SearchField.cc",
    "src/fist-gui-qt/SearchResultWidget.hh",
    "src/fist-gui-qt/SearchResultWidget.cc",
    "src/fist-gui-qt/SendFooter.hh",
    "src/fist-gui-qt/SendPanel.hh",
    "src/fist-gui-qt/ShapeButton.hh",
    "src/fist-gui-qt/SmoothLayout.hh",
    "src/fist-gui-qt/SmoothScrollBar.hh",
    "src/fist-gui-qt/TransactionFooter.hh",
    "src/fist-gui-qt/TransactionModel.hh",
    "src/fist-gui-qt/TransactionPanel.hh",
    "src/fist-gui-qt/TransactionWidget.hh",
    "src/fist-gui-qt/TransactionWindow.hh",
    "src/fist-gui-qt/UserModel.hh",
    "src/fist-gui-qt/UserWidget.hh",

    "src/fist-gui-qt/globals.hh",
    "resources/fist-gui-qt/resources.qrc",
  )

  application = drake.cxx.Executable(
    'bin/infinit-gui',
    sources + libraries,
    cxx_toolkit,
    cxx_config)

  build_rule = drake.Rule('build')
  build_rule << application
